<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itit.dao.system.ModuleDao">

    <resultMap id="BaseResultMap" type="com.itit.domain.system.Module">
        <id column="module_id" property="id" />
        <result column="parent_id" property="parentId" />
        <result column="parent_name" property="parentName" />
        <result column="name" property="name" />
        <result column="layer_num" property="layerNum" />
        <result column="is_leaf" property="isLeaf" />
        <result column="ico" property="ico" />
        <result column="cpermission" property="cpermission" />
        <result column="curl" property="curl" />
        <result column="ctype" property="ctype" />
        <result column="state" property="state" />
        <result column="belong" property="belong" />
        <result column="cwhich" property="cwhich" />
        <result column="quote_num" property="quoteNum" />
        <result column="remark" property="remark" />
        <result column="order_no"  property="orderNo" />
    </resultMap>

    <!--查询全部模块列表-->
    <select id="findAll" resultMap="BaseResultMap">
        select * from ss_module
    </select>

    <!--根据id查询-->
    <select id="findById" resultMap="BaseResultMap">
        select * from ss_module where module_id = #{id}
    </select>

    <!--删除-->
    <delete id="delete">
        delete from ss_module where module_id = #{id}
    </delete>

    <!--保存-->
    <insert id="save">
        insert into ss_module (module_id, parent_id, parent_name, name, layer_num, is_leaf,
        ico, cpermission, curl, ctype, state, belong, cwhich, quote_num,
        remark, order_no)
        values (#{id}, #{parentId}, #{parentName}, #{name}, #{layerNum}, #{isLeaf},
        #{ico}, #{cpermission}, #{curl}, #{ctype}, #{state}, #{belong}, #{cwhich}, #{quoteNum},
        #{remark}, #{orderNo})
    </insert>

    <!--更新-->
    <update id="update">
        update ss_module
        set parent_id = #{parentId},
        parent_name = #{parentName},
        name = #{name},
        layer_num = #{layerNum},
        is_leaf = #{isLeaf},
        ico = #{ico},
        cpermission = #{cpermission},
        curl = #{curl},
        ctype = #{ctype},
        state = #{state},
        belong = #{belong},
        cwhich = #{cwhich},
        quote_num = #{quoteNum},
        remark = #{remark},
        order_no = #{orderNo}
        where module_id = #{id}
    </update>

    <!--根据角色id查询所拥有的权限-->
    <select id="findModuleByRoleId" resultMap="BaseResultMap">
        SELECT M.* FROM `pe_role_module` RM
                            INNER JOIN `ss_module` M
                                       ON RM.`module_id`=M.`module_id`
        WHERE RM.`role_id`=#{roleId}
    </select>

    <!--//根据级别 查询权限
    List<Module> findModuleByBelong(int belong);-->
    <select id="findModuleByBelong" resultMap="BaseResultMap">
        SELECT * FROM `ss_module` WHERE `belong`=#{belong}
    </select>

    <!--//根据用户id查询用户拥有的权限
    List<Module> findModuleByUserId(String userId);-->
    <select id="findModuleByUserId" resultMap="BaseResultMap">
        SELECT  DISTINCT m.*
        FROM `pe_role_user` ru
                 INNER JOIN `pe_role_module` rm
                            ON ru.`role_id`=rm.`role_id`
                 INNER JOIN `ss_module` m
                            ON rm.`module_id`=m.`module_id`
        WHERE ru.`user_id`=#{userId}
    </select>
</mapper>